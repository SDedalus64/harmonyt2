# Workaround for missing get_folly_config method in Expo SDK 53
# Expo SDK 53 expects a global `get_folly_config` helper that no longer ships
# with React Native.  Define it here so the Expo pods can evaluate their
# podspecs without errors.
module Kernel
  def get_folly_config
    {
      :compiler_flags => '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1'
    }
  end
end

require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/expo/scripts/autolinking'

platform :ios, '15.1'

# Enable modular headers globally to fix Swift pod integration
use_modular_headers!

target 'HarmonyTi' do
  config = use_native_modules!
  use_expo_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => true
  )

  # Ensure React-jsinspector exposes a module map when building as a static
  # library. Without modular headers enabled CocoaPods refuses to integrate the
  # Swift pod ExpoModulesCore which depends on React-jsinspector.
  pod 'React-jsinspector',
      :path => '../node_modules/react-native/ReactCommon/jsinspector-modern',
      :modular_headers => true

  post_install do |installer|
    react_native_post_install(installer)

    # Fix for Xcode Beta precompiled modules issue
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Disable precompiled modules for all pods
        config.build_settings['ENABLE_MODULE_VERIFIER'] = 'NO'
        config.build_settings['ENABLE_PRECOMPILED_MODULES'] = 'NO'

        # Additional settings for Swift pods
        if target.name == 'ExpoModulesCore'
          config.build_settings['SWIFT_EMIT_MODULE_INTERFACE'] = 'NO'
          config.build_settings['SWIFT_INSTALL_MODULE'] = 'NO'
        end
      end
    end

    installer.target_installation_results.pod_target_installation_results
      .each do |pod_name, target_installation_result|
      target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
        resource_bundle_target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end
end
